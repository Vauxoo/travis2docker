; a generative tox configuration, see: https://testrun.org/tox/latest/config.html#generative-envlist

[tox]
envlist =
    clean,
    check,
    report,
    docs

[testenv]
setenv =
    PYTHONPATH={toxinidir}/tests
    PYTHONUNBUFFERED=yes
    TRAVIS2DOCKER_ROOT_PATH={envdir}/output
passenv =
    *
usedevelop = false
deps = -r{toxinidir}/requirements.txt
    # test deps
    pytest
    pytest-cov
    whichcraft
    nodeenv
commands =
    nodeenv --python-virtualenv
    npm install -g --no-package-lock --nosave dockerfile_lint@0.2.2
    {posargs:py.test --cov --cov-report=term-missing -vv tests}

[testenv:bootstrap]
deps =
    jinja2
    matrix
skip_install = true
commands =
    python ci/bootstrap.py
passenv =
    *

[testenv:spell]
setenv =
    SPELLCHECK=1
commands =
    sphinx-build -b spelling docs dist/docs
skip_install = true
deps =
    -r{toxinidir}/docs/requirements.txt
    sphinxcontrib-spelling
    pyenchant

[testenv:docs]
deps =
    -r{toxinidir}/docs/requirements.txt
commands =
    sphinx-build {posargs:-E} -b doctest docs dist/docs
    sphinx-build {posargs:-E} -b html docs dist/docs
    sphinx-build -b linkcheck docs dist/docs

[testenv:check]
deps =
    docutils
    check-manifest
    readme-renderer
    pygments
    pre-commit-vauxoo
skip_install = true
setenv =
    BLACK_SKIP_STRING_NORMALIZATION=1
commands =
    python setup.py check --strict --metadata --restructuredtext
    ; We are using git submodule in the package
    ; check-manifest {toxinidir}
    pre-commit-vauxoo -t all -p src/ -p tests/ -p setup.py

[testenv:coveralls]
deps =
    coveralls
skip_install = true
commands =
    coverage report
    coveralls []

[testenv:codecov]
deps =
    codecov
skip_install = true
commands =
    coverage report
    coverage xml --ignore-errors
    codecov []


[testenv:report]
deps = coverage
skip_install = true
commands =
    coverage report
    coverage html

[testenv:clean]
commands = coverage erase
skip_install = true
deps = coverage

