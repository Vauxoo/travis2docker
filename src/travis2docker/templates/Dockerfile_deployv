FROM {{ image  }}

ARG HOME=/home/odoo

# rm -rf /home/odoo/.ssh

{%- for src, dest in copies or [] %}
COPY {{ src }} {{ dest }}
{% endfor -%}

{% if copies -%}
RUN {% for src, dest in copies or [] -%} chown -R {{ user }}:{{ user }} {{dest}};
{%- endfor -%}
{%- endif %}

ENV ODOORC_DB_NAME=odoo ODOORC_PIDFILE=/home/odoo/.odoo.pid ODOORC_DATA_DIR=/home/odoo/data_dir PROFILE_FILE=/etc/bash.bashrc MAIN_REPO_FULL_PATH=/home/odoo/instance/$MAIN_REPO_PATH DEB_PYTHON_INSTALL_LAYOUT=deb
ENV COVERAGE_RCFILE=$HOME/.coveragerc
ENV COVERAGE_HOME=$MAIN_REPO_FULL_PATH

{% for build_env_arg in build_env_args %}
ENV {{ build_env_arg }}=TRUE
{% endfor %}

# Create cluster with odoo as owner and use environment variables instead of odoo cfg to connect
RUN . /home/odoo/build.sh && \
    install_dev_tools && \
    service_postgres_without_sudo odoo odoo && \
    install_pgcli_venv && \
    custom_alias && \
    odoo_conf && \
    git_set_remote && \
    bash_colorized && \
    setup_coverage && \
    configure_vim && \
    configure_zsh && \
    chown_all && \
    set_authorized_keys && \
    mv /entrypoint_image /deployv_entrypoint_image && \
    mv /entry_point.py /deployv_entry_point.py


USER {{ user }}

#Â TODO: Use .profile as bash profiler by default

ENTRYPOINT /entrypoint.sh

WORKDIR $MAIN_REPO_FULL_PATH
