name: build
on:
  # Trigger the workflow on push or pull request,
  # but only for the main branch
  push:
    branches:
      - main
    tags:
      - v*
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        python: ['2.7', '3.5', '3.6', '3.7', '3.8', '3.9', '3.10']
        os: [ubuntu-latest, windows-latest, macos-latest]
        tox_env: ["py,codecov"]
        include:
          - python: '3.5'
            os: ubuntu-20.04
            tox_env: "py,codecov"
          - python: '3.6'
            os: ubuntu-20.04
            tox_env: "py,codecov"
          - python: '3.9'
            os: ubuntu-latest
            tox_env: 'check,docs'
        exclude:
          - python: '3.5'
            os: ubuntu-latest
          - python: '3.6'
            os: ubuntu-latest
          - python: '2.7'
            os: windows-latest
          - python: '3.5'
            os: windows-latest
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
        submodules: recursive
    - uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python }}
        architecture: x64
        cache: 'pip'
    - name: Cache pre-commit packages
      id: cache-pre-commit
      uses: actions/cache@v3
      with:
        path: ~/.cache/pre-commit
        key: ${{ runner.os }}-py${{ matrix.python }}-pre-commit
    - name: install dependencies
      run: |
        python -mpip install --progress-bar=off -r ci/requirements.txt
        virtualenv --version
        pip --version
        tox --version
        pip list --format=freeze
    - name: test
      run: >-
        mkdir -p ~/.ssh &&
        tox -e ${{ matrix.tox_env }} -v
    - name: Build a binary wheel and a source tarball
      if: runner.os == 'Linux' && startsWith(matrix.tox_env, 'py39')
      run: >-
        python -m pip install build wheel twine && python -m
        build
        --sdist
        --wheel
        --outdir dist_wo_pbr/ && python -m
        build
        --no-isolation
        --sdist
        --wheel
        --outdir dist/ &&
        twine check dist/*
    - name: Publish package
      if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags') && runner.os == 'Linux' && startsWith(matrix.tox_env, 'py39')
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        password: ${{ secrets.PYPI_API_TOKEN }}
